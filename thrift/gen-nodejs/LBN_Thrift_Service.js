//
// Autogenerated by Thrift Compiler (0.9.1)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
var Thrift = require('thrift').Thrift;

var ttypes = require('./LBN_Thrift_types');
//HELPER FUNCTIONS AND STRUCTURES

LBN_Thrift_Service_LBN_Thrift_Service_Init_args = function(args) {
};
LBN_Thrift_Service_LBN_Thrift_Service_Init_args.prototype = {};
LBN_Thrift_Service_LBN_Thrift_Service_Init_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_Service_Init_args.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_Service_Init_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_Service_Init_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
LBN_Thrift_Service_LBN_Thrift_Service_Init_result.prototype = {};
LBN_Thrift_Service_LBN_Thrift_Service_Init_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.BOOL) {
        this.success = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_Service_Init_result.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_Service_Init_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.BOOL, 0);
    output.writeBool(this.success);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetAreaList_args = function(args) {
};
LBN_Thrift_Service_LBN_Thrift_GetAreaList_args.prototype = {};
LBN_Thrift_Service_LBN_Thrift_GetAreaList_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetAreaList_args.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_GetAreaList_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetAreaList_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
LBN_Thrift_Service_LBN_Thrift_GetAreaList_result.prototype = {};
LBN_Thrift_Service_LBN_Thrift_GetAreaList_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size88 = 0;
        var _rtmp392;
        this.success = [];
        var _etype91 = 0;
        _rtmp392 = input.readListBegin();
        _etype91 = _rtmp392.etype;
        _size88 = _rtmp392.size;
        for (var _i93 = 0; _i93 < _size88; ++_i93)
        {
          var elem94 = null;
          elem94 = new ttypes.stLBN_Area();
          elem94.read(input);
          this.success.push(elem94);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetAreaList_result.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_GetAreaList_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter95 in this.success)
    {
      if (this.success.hasOwnProperty(iter95))
      {
        iter95 = this.success[iter95];
        iter95.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetModule_args = function(args) {
  this.id = null;
  if (args) {
    if (args.id !== undefined) {
      this.id = args.id;
    }
  }
};
LBN_Thrift_Service_LBN_Thrift_GetModule_args.prototype = {};
LBN_Thrift_Service_LBN_Thrift_GetModule_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.id = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetModule_args.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_GetModule_args');
  if (this.id !== null && this.id !== undefined) {
    output.writeFieldBegin('id', Thrift.Type.I32, 1);
    output.writeI32(this.id);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetModule_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
LBN_Thrift_Service_LBN_Thrift_GetModule_result.prototype = {};
LBN_Thrift_Service_LBN_Thrift_GetModule_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.stLBN_Module();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetModule_result.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_GetModule_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetModuleControlMax_args = function(args) {
};
LBN_Thrift_Service_LBN_Thrift_GetModuleControlMax_args.prototype = {};
LBN_Thrift_Service_LBN_Thrift_GetModuleControlMax_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetModuleControlMax_args.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_GetModuleControlMax_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetModuleControlMax_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
LBN_Thrift_Service_LBN_Thrift_GetModuleControlMax_result.prototype = {};
LBN_Thrift_Service_LBN_Thrift_GetModuleControlMax_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.stLBN_ModuleControl();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetModuleControlMax_result.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_GetModuleControlMax_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_SetModule_args = function(args) {
  this.moduleId = null;
  this.control = null;
  if (args) {
    if (args.moduleId !== undefined) {
      this.moduleId = args.moduleId;
    }
    if (args.control !== undefined) {
      this.control = args.control;
    }
  }
};
LBN_Thrift_Service_LBN_Thrift_SetModule_args.prototype = {};
LBN_Thrift_Service_LBN_Thrift_SetModule_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.moduleId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.control = new ttypes.stLBN_ModuleControl();
        this.control.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_SetModule_args.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_SetModule_args');
  if (this.moduleId !== null && this.moduleId !== undefined) {
    output.writeFieldBegin('moduleId', Thrift.Type.I32, 1);
    output.writeI32(this.moduleId);
    output.writeFieldEnd();
  }
  if (this.control !== null && this.control !== undefined) {
    output.writeFieldBegin('control', Thrift.Type.STRUCT, 2);
    this.control.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_SetModule_result = function(args) {
};
LBN_Thrift_Service_LBN_Thrift_SetModule_result.prototype = {};
LBN_Thrift_Service_LBN_Thrift_SetModule_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_SetModule_result.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_SetModule_result');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_SetModules_args = function(args) {
  this.moduleIdList = null;
  this.control = null;
  if (args) {
    if (args.moduleIdList !== undefined) {
      this.moduleIdList = args.moduleIdList;
    }
    if (args.control !== undefined) {
      this.control = args.control;
    }
  }
};
LBN_Thrift_Service_LBN_Thrift_SetModules_args.prototype = {};
LBN_Thrift_Service_LBN_Thrift_SetModules_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.LIST) {
        var _size96 = 0;
        var _rtmp3100;
        this.moduleIdList = [];
        var _etype99 = 0;
        _rtmp3100 = input.readListBegin();
        _etype99 = _rtmp3100.etype;
        _size96 = _rtmp3100.size;
        for (var _i101 = 0; _i101 < _size96; ++_i101)
        {
          var elem102 = null;
          elem102 = input.readI32();
          this.moduleIdList.push(elem102);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.control = new ttypes.stLBN_ModuleControl();
        this.control.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_SetModules_args.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_SetModules_args');
  if (this.moduleIdList !== null && this.moduleIdList !== undefined) {
    output.writeFieldBegin('moduleIdList', Thrift.Type.LIST, 1);
    output.writeListBegin(Thrift.Type.I32, this.moduleIdList.length);
    for (var iter103 in this.moduleIdList)
    {
      if (this.moduleIdList.hasOwnProperty(iter103))
      {
        iter103 = this.moduleIdList[iter103];
        output.writeI32(iter103);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.control !== null && this.control !== undefined) {
    output.writeFieldBegin('control', Thrift.Type.STRUCT, 2);
    this.control.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_SetModules_result = function(args) {
};
LBN_Thrift_Service_LBN_Thrift_SetModules_result.prototype = {};
LBN_Thrift_Service_LBN_Thrift_SetModules_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_SetModules_result.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_SetModules_result');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_SetModuleMessage_args = function(args) {
  this.moduleId = null;
  this.message = null;
  if (args) {
    if (args.moduleId !== undefined) {
      this.moduleId = args.moduleId;
    }
    if (args.message !== undefined) {
      this.message = args.message;
    }
  }
};
LBN_Thrift_Service_LBN_Thrift_SetModuleMessage_args.prototype = {};
LBN_Thrift_Service_LBN_Thrift_SetModuleMessage_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.moduleId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.message = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_SetModuleMessage_args.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_SetModuleMessage_args');
  if (this.moduleId !== null && this.moduleId !== undefined) {
    output.writeFieldBegin('moduleId', Thrift.Type.I32, 1);
    output.writeI32(this.moduleId);
    output.writeFieldEnd();
  }
  if (this.message !== null && this.message !== undefined) {
    output.writeFieldBegin('message', Thrift.Type.STRING, 2);
    output.writeString(this.message);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_SetModuleMessage_result = function(args) {
};
LBN_Thrift_Service_LBN_Thrift_SetModuleMessage_result.prototype = {};
LBN_Thrift_Service_LBN_Thrift_SetModuleMessage_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_SetModuleMessage_result.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_SetModuleMessage_result');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_SetSwitch_args = function(args) {
  this.switchId = null;
  this.modules = null;
  if (args) {
    if (args.switchId !== undefined) {
      this.switchId = args.switchId;
    }
    if (args.modules !== undefined) {
      this.modules = args.modules;
    }
  }
};
LBN_Thrift_Service_LBN_Thrift_SetSwitch_args.prototype = {};
LBN_Thrift_Service_LBN_Thrift_SetSwitch_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.switchId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.LIST) {
        var _size104 = 0;
        var _rtmp3108;
        this.modules = [];
        var _etype107 = 0;
        _rtmp3108 = input.readListBegin();
        _etype107 = _rtmp3108.etype;
        _size104 = _rtmp3108.size;
        for (var _i109 = 0; _i109 < _size104; ++_i109)
        {
          var elem110 = null;
          elem110 = new ttypes.stLBN_Module();
          elem110.read(input);
          this.modules.push(elem110);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_SetSwitch_args.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_SetSwitch_args');
  if (this.switchId !== null && this.switchId !== undefined) {
    output.writeFieldBegin('switchId', Thrift.Type.I32, 1);
    output.writeI32(this.switchId);
    output.writeFieldEnd();
  }
  if (this.modules !== null && this.modules !== undefined) {
    output.writeFieldBegin('modules', Thrift.Type.LIST, 2);
    output.writeListBegin(Thrift.Type.STRUCT, this.modules.length);
    for (var iter111 in this.modules)
    {
      if (this.modules.hasOwnProperty(iter111))
      {
        iter111 = this.modules[iter111];
        iter111.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_SetSwitch_result = function(args) {
};
LBN_Thrift_Service_LBN_Thrift_SetSwitch_result.prototype = {};
LBN_Thrift_Service_LBN_Thrift_SetSwitch_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_SetSwitch_result.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_SetSwitch_result');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetSwitches_args = function(args) {
};
LBN_Thrift_Service_LBN_Thrift_GetSwitches_args.prototype = {};
LBN_Thrift_Service_LBN_Thrift_GetSwitches_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetSwitches_args.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_GetSwitches_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetSwitches_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
LBN_Thrift_Service_LBN_Thrift_GetSwitches_result.prototype = {};
LBN_Thrift_Service_LBN_Thrift_GetSwitches_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size112 = 0;
        var _rtmp3116;
        this.success = [];
        var _etype115 = 0;
        _rtmp3116 = input.readListBegin();
        _etype115 = _rtmp3116.etype;
        _size112 = _rtmp3116.size;
        for (var _i117 = 0; _i117 < _size112; ++_i117)
        {
          var elem118 = null;
          elem118 = new ttypes.stLBN_Switch();
          elem118.read(input);
          this.success.push(elem118);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetSwitches_result.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_GetSwitches_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter119 in this.success)
    {
      if (this.success.hasOwnProperty(iter119))
      {
        iter119 = this.success[iter119];
        iter119.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetPowerMeter_args = function(args) {
};
LBN_Thrift_Service_LBN_Thrift_GetPowerMeter_args.prototype = {};
LBN_Thrift_Service_LBN_Thrift_GetPowerMeter_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetPowerMeter_args.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_GetPowerMeter_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetPowerMeter_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
LBN_Thrift_Service_LBN_Thrift_GetPowerMeter_result.prototype = {};
LBN_Thrift_Service_LBN_Thrift_GetPowerMeter_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.stLBN_PowerMeter();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetPowerMeter_result.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_GetPowerMeter_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetPowerMeterOneDay_args = function(args) {
};
LBN_Thrift_Service_LBN_Thrift_GetPowerMeterOneDay_args.prototype = {};
LBN_Thrift_Service_LBN_Thrift_GetPowerMeterOneDay_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetPowerMeterOneDay_args.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_GetPowerMeterOneDay_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetPowerMeterOneDay_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
LBN_Thrift_Service_LBN_Thrift_GetPowerMeterOneDay_result.prototype = {};
LBN_Thrift_Service_LBN_Thrift_GetPowerMeterOneDay_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.stLBN_PowerMeterOneDay();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetPowerMeterOneDay_result.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_GetPowerMeterOneDay_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetDisasterInfo_args = function(args) {
};
LBN_Thrift_Service_LBN_Thrift_GetDisasterInfo_args.prototype = {};
LBN_Thrift_Service_LBN_Thrift_GetDisasterInfo_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetDisasterInfo_args.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_GetDisasterInfo_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetDisasterInfo_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
LBN_Thrift_Service_LBN_Thrift_GetDisasterInfo_result.prototype = {};
LBN_Thrift_Service_LBN_Thrift_GetDisasterInfo_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.stLBN_DisasterInfo();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetDisasterInfo_result.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_GetDisasterInfo_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetAdminPassword_args = function(args) {
};
LBN_Thrift_Service_LBN_Thrift_GetAdminPassword_args.prototype = {};
LBN_Thrift_Service_LBN_Thrift_GetAdminPassword_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetAdminPassword_args.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_GetAdminPassword_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetAdminPassword_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
LBN_Thrift_Service_LBN_Thrift_GetAdminPassword_result.prototype = {};
LBN_Thrift_Service_LBN_Thrift_GetAdminPassword_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRING) {
        this.success = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetAdminPassword_result.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_GetAdminPassword_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRING, 0);
    output.writeString(this.success);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_SetActive_args = function(args) {
  this.active = null;
  if (args) {
    if (args.active !== undefined) {
      this.active = args.active;
    }
  }
};
LBN_Thrift_Service_LBN_Thrift_SetActive_args.prototype = {};
LBN_Thrift_Service_LBN_Thrift_SetActive_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.BOOL) {
        this.active = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_SetActive_args.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_SetActive_args');
  if (this.active !== null && this.active !== undefined) {
    output.writeFieldBegin('active', Thrift.Type.BOOL, 1);
    output.writeBool(this.active);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_SetActive_result = function(args) {
};
LBN_Thrift_Service_LBN_Thrift_SetActive_result.prototype = {};
LBN_Thrift_Service_LBN_Thrift_SetActive_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_SetActive_result.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_SetActive_result');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetActive_args = function(args) {
};
LBN_Thrift_Service_LBN_Thrift_GetActive_args.prototype = {};
LBN_Thrift_Service_LBN_Thrift_GetActive_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetActive_args.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_GetActive_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetActive_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
LBN_Thrift_Service_LBN_Thrift_GetActive_result.prototype = {};
LBN_Thrift_Service_LBN_Thrift_GetActive_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.BOOL) {
        this.success = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetActive_result.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_GetActive_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.BOOL, 0);
    output.writeBool(this.success);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_SetAuto_args = function(args) {
  this.automatic = null;
  if (args) {
    if (args.automatic !== undefined) {
      this.automatic = args.automatic;
    }
  }
};
LBN_Thrift_Service_LBN_Thrift_SetAuto_args.prototype = {};
LBN_Thrift_Service_LBN_Thrift_SetAuto_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.BOOL) {
        this.automatic = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_SetAuto_args.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_SetAuto_args');
  if (this.automatic !== null && this.automatic !== undefined) {
    output.writeFieldBegin('automatic', Thrift.Type.BOOL, 1);
    output.writeBool(this.automatic);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_SetAuto_result = function(args) {
};
LBN_Thrift_Service_LBN_Thrift_SetAuto_result.prototype = {};
LBN_Thrift_Service_LBN_Thrift_SetAuto_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_SetAuto_result.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_SetAuto_result');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetAuto_args = function(args) {
};
LBN_Thrift_Service_LBN_Thrift_GetAuto_args.prototype = {};
LBN_Thrift_Service_LBN_Thrift_GetAuto_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetAuto_args.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_GetAuto_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetAuto_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
LBN_Thrift_Service_LBN_Thrift_GetAuto_result.prototype = {};
LBN_Thrift_Service_LBN_Thrift_GetAuto_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.BOOL) {
        this.success = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetAuto_result.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_GetAuto_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.BOOL, 0);
    output.writeBool(this.success);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_SetSimulate_args = function(args) {
  this.simulate = null;
  if (args) {
    if (args.simulate !== undefined) {
      this.simulate = args.simulate;
    }
  }
};
LBN_Thrift_Service_LBN_Thrift_SetSimulate_args.prototype = {};
LBN_Thrift_Service_LBN_Thrift_SetSimulate_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.BOOL) {
        this.simulate = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_SetSimulate_args.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_SetSimulate_args');
  if (this.simulate !== null && this.simulate !== undefined) {
    output.writeFieldBegin('simulate', Thrift.Type.BOOL, 1);
    output.writeBool(this.simulate);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_SetSimulate_result = function(args) {
};
LBN_Thrift_Service_LBN_Thrift_SetSimulate_result.prototype = {};
LBN_Thrift_Service_LBN_Thrift_SetSimulate_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_SetSimulate_result.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_SetSimulate_result');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetSceneList_args = function(args) {
};
LBN_Thrift_Service_LBN_Thrift_GetSceneList_args.prototype = {};
LBN_Thrift_Service_LBN_Thrift_GetSceneList_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetSceneList_args.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_GetSceneList_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetSceneList_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
LBN_Thrift_Service_LBN_Thrift_GetSceneList_result.prototype = {};
LBN_Thrift_Service_LBN_Thrift_GetSceneList_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size120 = 0;
        var _rtmp3124;
        this.success = [];
        var _etype123 = 0;
        _rtmp3124 = input.readListBegin();
        _etype123 = _rtmp3124.etype;
        _size120 = _rtmp3124.size;
        for (var _i125 = 0; _i125 < _size120; ++_i125)
        {
          var elem126 = null;
          elem126 = new ttypes.stLBN_Scene();
          elem126.read(input);
          this.success.push(elem126);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetSceneList_result.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_GetSceneList_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter127 in this.success)
    {
      if (this.success.hasOwnProperty(iter127))
      {
        iter127 = this.success[iter127];
        iter127.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_AddScene_args = function(args) {
  this.title = null;
  if (args) {
    if (args.title !== undefined) {
      this.title = args.title;
    }
  }
};
LBN_Thrift_Service_LBN_Thrift_AddScene_args.prototype = {};
LBN_Thrift_Service_LBN_Thrift_AddScene_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.title = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_AddScene_args.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_AddScene_args');
  if (this.title !== null && this.title !== undefined) {
    output.writeFieldBegin('title', Thrift.Type.STRING, 1);
    output.writeString(this.title);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_AddScene_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
LBN_Thrift_Service_LBN_Thrift_AddScene_result.prototype = {};
LBN_Thrift_Service_LBN_Thrift_AddScene_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.I32) {
        this.success = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_AddScene_result.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_AddScene_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.I32, 0);
    output.writeI32(this.success);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_ModifyScene_args = function(args) {
  this.scene = null;
  if (args) {
    if (args.scene !== undefined) {
      this.scene = args.scene;
    }
  }
};
LBN_Thrift_Service_LBN_Thrift_ModifyScene_args.prototype = {};
LBN_Thrift_Service_LBN_Thrift_ModifyScene_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.scene = new ttypes.stLBN_Scene();
        this.scene.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_ModifyScene_args.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_ModifyScene_args');
  if (this.scene !== null && this.scene !== undefined) {
    output.writeFieldBegin('scene', Thrift.Type.STRUCT, 1);
    this.scene.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_ModifyScene_result = function(args) {
};
LBN_Thrift_Service_LBN_Thrift_ModifyScene_result.prototype = {};
LBN_Thrift_Service_LBN_Thrift_ModifyScene_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_ModifyScene_result.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_ModifyScene_result');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_DeleteScene_args = function(args) {
  this.sceneId = null;
  if (args) {
    if (args.sceneId !== undefined) {
      this.sceneId = args.sceneId;
    }
  }
};
LBN_Thrift_Service_LBN_Thrift_DeleteScene_args.prototype = {};
LBN_Thrift_Service_LBN_Thrift_DeleteScene_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.sceneId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_DeleteScene_args.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_DeleteScene_args');
  if (this.sceneId !== null && this.sceneId !== undefined) {
    output.writeFieldBegin('sceneId', Thrift.Type.I32, 1);
    output.writeI32(this.sceneId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_DeleteScene_result = function(args) {
};
LBN_Thrift_Service_LBN_Thrift_DeleteScene_result.prototype = {};
LBN_Thrift_Service_LBN_Thrift_DeleteScene_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_DeleteScene_result.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_DeleteScene_result');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_PreviewScene_args = function(args) {
  this.sceneId = null;
  if (args) {
    if (args.sceneId !== undefined) {
      this.sceneId = args.sceneId;
    }
  }
};
LBN_Thrift_Service_LBN_Thrift_PreviewScene_args.prototype = {};
LBN_Thrift_Service_LBN_Thrift_PreviewScene_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.sceneId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_PreviewScene_args.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_PreviewScene_args');
  if (this.sceneId !== null && this.sceneId !== undefined) {
    output.writeFieldBegin('sceneId', Thrift.Type.I32, 1);
    output.writeI32(this.sceneId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_PreviewScene_result = function(args) {
};
LBN_Thrift_Service_LBN_Thrift_PreviewScene_result.prototype = {};
LBN_Thrift_Service_LBN_Thrift_PreviewScene_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_PreviewScene_result.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_PreviewScene_result');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetScheduleList_args = function(args) {
};
LBN_Thrift_Service_LBN_Thrift_GetScheduleList_args.prototype = {};
LBN_Thrift_Service_LBN_Thrift_GetScheduleList_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetScheduleList_args.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_GetScheduleList_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetScheduleList_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
LBN_Thrift_Service_LBN_Thrift_GetScheduleList_result.prototype = {};
LBN_Thrift_Service_LBN_Thrift_GetScheduleList_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size128 = 0;
        var _rtmp3132;
        this.success = [];
        var _etype131 = 0;
        _rtmp3132 = input.readListBegin();
        _etype131 = _rtmp3132.etype;
        _size128 = _rtmp3132.size;
        for (var _i133 = 0; _i133 < _size128; ++_i133)
        {
          var elem134 = null;
          elem134 = new ttypes.stLBN_Schedule();
          elem134.read(input);
          this.success.push(elem134);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetScheduleList_result.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_GetScheduleList_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter135 in this.success)
    {
      if (this.success.hasOwnProperty(iter135))
      {
        iter135 = this.success[iter135];
        iter135.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_AddSchedule_args = function(args) {
  this.scene = null;
  this.time = null;
  this.repeatAll = null;
  this.repeatDays = null;
  if (args) {
    if (args.scene !== undefined) {
      this.scene = args.scene;
    }
    if (args.time !== undefined) {
      this.time = args.time;
    }
    if (args.repeatAll !== undefined) {
      this.repeatAll = args.repeatAll;
    }
    if (args.repeatDays !== undefined) {
      this.repeatDays = args.repeatDays;
    }
  }
};
LBN_Thrift_Service_LBN_Thrift_AddSchedule_args.prototype = {};
LBN_Thrift_Service_LBN_Thrift_AddSchedule_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.scene = new ttypes.stLBN_Scene();
        this.scene.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I64) {
        this.time = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.BOOL) {
        this.repeatAll = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.LIST) {
        var _size136 = 0;
        var _rtmp3140;
        this.repeatDays = [];
        var _etype139 = 0;
        _rtmp3140 = input.readListBegin();
        _etype139 = _rtmp3140.etype;
        _size136 = _rtmp3140.size;
        for (var _i141 = 0; _i141 < _size136; ++_i141)
        {
          var elem142 = null;
          elem142 = input.readBool();
          this.repeatDays.push(elem142);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_AddSchedule_args.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_AddSchedule_args');
  if (this.scene !== null && this.scene !== undefined) {
    output.writeFieldBegin('scene', Thrift.Type.STRUCT, 1);
    this.scene.write(output);
    output.writeFieldEnd();
  }
  if (this.time !== null && this.time !== undefined) {
    output.writeFieldBegin('time', Thrift.Type.I64, 2);
    output.writeI64(this.time);
    output.writeFieldEnd();
  }
  if (this.repeatAll !== null && this.repeatAll !== undefined) {
    output.writeFieldBegin('repeatAll', Thrift.Type.BOOL, 3);
    output.writeBool(this.repeatAll);
    output.writeFieldEnd();
  }
  if (this.repeatDays !== null && this.repeatDays !== undefined) {
    output.writeFieldBegin('repeatDays', Thrift.Type.LIST, 4);
    output.writeListBegin(Thrift.Type.BOOL, this.repeatDays.length);
    for (var iter143 in this.repeatDays)
    {
      if (this.repeatDays.hasOwnProperty(iter143))
      {
        iter143 = this.repeatDays[iter143];
        output.writeBool(iter143);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_AddSchedule_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
LBN_Thrift_Service_LBN_Thrift_AddSchedule_result.prototype = {};
LBN_Thrift_Service_LBN_Thrift_AddSchedule_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.I32) {
        this.success = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_AddSchedule_result.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_AddSchedule_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.I32, 0);
    output.writeI32(this.success);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_ModifySchedule_args = function(args) {
  this.schedule = null;
  if (args) {
    if (args.schedule !== undefined) {
      this.schedule = args.schedule;
    }
  }
};
LBN_Thrift_Service_LBN_Thrift_ModifySchedule_args.prototype = {};
LBN_Thrift_Service_LBN_Thrift_ModifySchedule_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.schedule = new ttypes.stLBN_Schedule();
        this.schedule.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_ModifySchedule_args.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_ModifySchedule_args');
  if (this.schedule !== null && this.schedule !== undefined) {
    output.writeFieldBegin('schedule', Thrift.Type.STRUCT, 1);
    this.schedule.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_ModifySchedule_result = function(args) {
};
LBN_Thrift_Service_LBN_Thrift_ModifySchedule_result.prototype = {};
LBN_Thrift_Service_LBN_Thrift_ModifySchedule_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_ModifySchedule_result.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_ModifySchedule_result');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_DeleteSchedule_args = function(args) {
  this.scheduleId = null;
  if (args) {
    if (args.scheduleId !== undefined) {
      this.scheduleId = args.scheduleId;
    }
  }
};
LBN_Thrift_Service_LBN_Thrift_DeleteSchedule_args.prototype = {};
LBN_Thrift_Service_LBN_Thrift_DeleteSchedule_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.scheduleId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_DeleteSchedule_args.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_DeleteSchedule_args');
  if (this.scheduleId !== null && this.scheduleId !== undefined) {
    output.writeFieldBegin('scheduleId', Thrift.Type.I32, 1);
    output.writeI32(this.scheduleId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_DeleteSchedule_result = function(args) {
};
LBN_Thrift_Service_LBN_Thrift_DeleteSchedule_result.prototype = {};
LBN_Thrift_Service_LBN_Thrift_DeleteSchedule_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_DeleteSchedule_result.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_DeleteSchedule_result');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetContextRuleList_args = function(args) {
};
LBN_Thrift_Service_LBN_Thrift_GetContextRuleList_args.prototype = {};
LBN_Thrift_Service_LBN_Thrift_GetContextRuleList_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetContextRuleList_args.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_GetContextRuleList_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetContextRuleList_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
LBN_Thrift_Service_LBN_Thrift_GetContextRuleList_result.prototype = {};
LBN_Thrift_Service_LBN_Thrift_GetContextRuleList_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size144 = 0;
        var _rtmp3148;
        this.success = [];
        var _etype147 = 0;
        _rtmp3148 = input.readListBegin();
        _etype147 = _rtmp3148.etype;
        _size144 = _rtmp3148.size;
        for (var _i149 = 0; _i149 < _size144; ++_i149)
        {
          var elem150 = null;
          elem150 = new ttypes.stLBN_ContextRule();
          elem150.read(input);
          this.success.push(elem150);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetContextRuleList_result.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_GetContextRuleList_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter151 in this.success)
    {
      if (this.success.hasOwnProperty(iter151))
      {
        iter151 = this.success[iter151];
        iter151.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_ModifyContextRule_args = function(args) {
  this.rule = null;
  if (args) {
    if (args.rule !== undefined) {
      this.rule = args.rule;
    }
  }
};
LBN_Thrift_Service_LBN_Thrift_ModifyContextRule_args.prototype = {};
LBN_Thrift_Service_LBN_Thrift_ModifyContextRule_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.rule = new ttypes.stLBN_ContextRule();
        this.rule.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_ModifyContextRule_args.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_ModifyContextRule_args');
  if (this.rule !== null && this.rule !== undefined) {
    output.writeFieldBegin('rule', Thrift.Type.STRUCT, 1);
    this.rule.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_ModifyContextRule_result = function(args) {
};
LBN_Thrift_Service_LBN_Thrift_ModifyContextRule_result.prototype = {};
LBN_Thrift_Service_LBN_Thrift_ModifyContextRule_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_ModifyContextRule_result.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_ModifyContextRule_result');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_SetEnableContextRule_args = function(args) {
  this.contextId = null;
  this.enable = null;
  if (args) {
    if (args.contextId !== undefined) {
      this.contextId = args.contextId;
    }
    if (args.enable !== undefined) {
      this.enable = args.enable;
    }
  }
};
LBN_Thrift_Service_LBN_Thrift_SetEnableContextRule_args.prototype = {};
LBN_Thrift_Service_LBN_Thrift_SetEnableContextRule_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.contextId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.BOOL) {
        this.enable = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_SetEnableContextRule_args.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_SetEnableContextRule_args');
  if (this.contextId !== null && this.contextId !== undefined) {
    output.writeFieldBegin('contextId', Thrift.Type.I32, 1);
    output.writeI32(this.contextId);
    output.writeFieldEnd();
  }
  if (this.enable !== null && this.enable !== undefined) {
    output.writeFieldBegin('enable', Thrift.Type.BOOL, 2);
    output.writeBool(this.enable);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_SetEnableContextRule_result = function(args) {
};
LBN_Thrift_Service_LBN_Thrift_SetEnableContextRule_result.prototype = {};
LBN_Thrift_Service_LBN_Thrift_SetEnableContextRule_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_SetEnableContextRule_result.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_SetEnableContextRule_result');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_Simulate_args = function(args) {
  this.time = null;
  if (args) {
    if (args.time !== undefined) {
      this.time = args.time;
    }
  }
};
LBN_Thrift_Service_LBN_Thrift_Simulate_args.prototype = {};
LBN_Thrift_Service_LBN_Thrift_Simulate_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.time = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_Simulate_args.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_Simulate_args');
  if (this.time !== null && this.time !== undefined) {
    output.writeFieldBegin('time', Thrift.Type.I64, 1);
    output.writeI64(this.time);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_Simulate_result = function(args) {
};
LBN_Thrift_Service_LBN_Thrift_Simulate_result.prototype = {};
LBN_Thrift_Service_LBN_Thrift_Simulate_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_Simulate_result.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_Simulate_result');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetSolarInfo_args = function(args) {
};
LBN_Thrift_Service_LBN_Thrift_GetSolarInfo_args.prototype = {};
LBN_Thrift_Service_LBN_Thrift_GetSolarInfo_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetSolarInfo_args.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_GetSolarInfo_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetSolarInfo_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
LBN_Thrift_Service_LBN_Thrift_GetSolarInfo_result.prototype = {};
LBN_Thrift_Service_LBN_Thrift_GetSolarInfo_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.stLBN_SolarInfo();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetSolarInfo_result.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_GetSolarInfo_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetCharts_args = function(args) {
};
LBN_Thrift_Service_LBN_Thrift_GetCharts_args.prototype = {};
LBN_Thrift_Service_LBN_Thrift_GetCharts_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetCharts_args.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_GetCharts_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetCharts_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
LBN_Thrift_Service_LBN_Thrift_GetCharts_result.prototype = {};
LBN_Thrift_Service_LBN_Thrift_GetCharts_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size152 = 0;
        var _rtmp3156;
        this.success = [];
        var _etype155 = 0;
        _rtmp3156 = input.readListBegin();
        _etype155 = _rtmp3156.etype;
        _size152 = _rtmp3156.size;
        for (var _i157 = 0; _i157 < _size152; ++_i157)
        {
          var elem158 = null;
          elem158 = new ttypes.stLBN_Chart();
          elem158.read(input);
          this.success.push(elem158);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetCharts_result.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_GetCharts_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter159 in this.success)
    {
      if (this.success.hasOwnProperty(iter159))
      {
        iter159 = this.success[iter159];
        iter159.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetParkingSensorList_args = function(args) {
};
LBN_Thrift_Service_LBN_Thrift_GetParkingSensorList_args.prototype = {};
LBN_Thrift_Service_LBN_Thrift_GetParkingSensorList_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetParkingSensorList_args.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_GetParkingSensorList_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetParkingSensorList_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
LBN_Thrift_Service_LBN_Thrift_GetParkingSensorList_result.prototype = {};
LBN_Thrift_Service_LBN_Thrift_GetParkingSensorList_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size160 = 0;
        var _rtmp3164;
        this.success = [];
        var _etype163 = 0;
        _rtmp3164 = input.readListBegin();
        _etype163 = _rtmp3164.etype;
        _size160 = _rtmp3164.size;
        for (var _i165 = 0; _i165 < _size160; ++_i165)
        {
          var elem166 = null;
          elem166 = new ttypes.stLBN_ParkingSensor();
          elem166.read(input);
          this.success.push(elem166);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetParkingSensorList_result.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_GetParkingSensorList_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter167 in this.success)
    {
      if (this.success.hasOwnProperty(iter167))
      {
        iter167 = this.success[iter167];
        iter167.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetSchedulePresetList_args = function(args) {
};
LBN_Thrift_Service_LBN_Thrift_GetSchedulePresetList_args.prototype = {};
LBN_Thrift_Service_LBN_Thrift_GetSchedulePresetList_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetSchedulePresetList_args.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_GetSchedulePresetList_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetSchedulePresetList_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
LBN_Thrift_Service_LBN_Thrift_GetSchedulePresetList_result.prototype = {};
LBN_Thrift_Service_LBN_Thrift_GetSchedulePresetList_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size168 = 0;
        var _rtmp3172;
        this.success = [];
        var _etype171 = 0;
        _rtmp3172 = input.readListBegin();
        _etype171 = _rtmp3172.etype;
        _size168 = _rtmp3172.size;
        for (var _i173 = 0; _i173 < _size168; ++_i173)
        {
          var elem174 = null;
          elem174 = new ttypes.stLBN_SchedulePreset();
          elem174.read(input);
          this.success.push(elem174);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_GetSchedulePresetList_result.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_GetSchedulePresetList_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter175 in this.success)
    {
      if (this.success.hasOwnProperty(iter175))
      {
        iter175 = this.success[iter175];
        iter175.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_SetSchedulePreset_args = function(args) {
  this.presetId = null;
  if (args) {
    if (args.presetId !== undefined) {
      this.presetId = args.presetId;
    }
  }
};
LBN_Thrift_Service_LBN_Thrift_SetSchedulePreset_args.prototype = {};
LBN_Thrift_Service_LBN_Thrift_SetSchedulePreset_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.presetId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_SetSchedulePreset_args.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_SetSchedulePreset_args');
  if (this.presetId !== null && this.presetId !== undefined) {
    output.writeFieldBegin('presetId', Thrift.Type.I32, 1);
    output.writeI32(this.presetId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_SetSchedulePreset_result = function(args) {
};
LBN_Thrift_Service_LBN_Thrift_SetSchedulePreset_result.prototype = {};
LBN_Thrift_Service_LBN_Thrift_SetSchedulePreset_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LBN_Thrift_Service_LBN_Thrift_SetSchedulePreset_result.prototype.write = function(output) {
  output.writeStructBegin('LBN_Thrift_Service_LBN_Thrift_SetSchedulePreset_result');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

LBN_Thrift_ServiceClient = exports.Client = function(output, pClass) {
    this.output = output;
    this.pClass = pClass;
    this.seqid = 0;
    this._reqs = {};
};
LBN_Thrift_ServiceClient.prototype = {};
LBN_Thrift_ServiceClient.prototype.LBN_Thrift_Service_Init = function(callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_LBN_Thrift_Service_Init();
};

LBN_Thrift_ServiceClient.prototype.send_LBN_Thrift_Service_Init = function() {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('LBN_Thrift_Service_Init', Thrift.MessageType.CALL, this.seqid);
  var args = new LBN_Thrift_Service_LBN_Thrift_Service_Init_args();
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

LBN_Thrift_ServiceClient.prototype.recv_LBN_Thrift_Service_Init = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new LBN_Thrift_Service_LBN_Thrift_Service_Init_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('LBN_Thrift_Service_Init failed: unknown result');
};
LBN_Thrift_ServiceClient.prototype.LBN_Thrift_GetAreaList = function(callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_LBN_Thrift_GetAreaList();
};

LBN_Thrift_ServiceClient.prototype.send_LBN_Thrift_GetAreaList = function() {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('LBN_Thrift_GetAreaList', Thrift.MessageType.CALL, this.seqid);
  var args = new LBN_Thrift_Service_LBN_Thrift_GetAreaList_args();
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

LBN_Thrift_ServiceClient.prototype.recv_LBN_Thrift_GetAreaList = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new LBN_Thrift_Service_LBN_Thrift_GetAreaList_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('LBN_Thrift_GetAreaList failed: unknown result');
};
LBN_Thrift_ServiceClient.prototype.LBN_Thrift_GetModule = function(id, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_LBN_Thrift_GetModule(id);
};

LBN_Thrift_ServiceClient.prototype.send_LBN_Thrift_GetModule = function(id) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('LBN_Thrift_GetModule', Thrift.MessageType.CALL, this.seqid);
  var args = new LBN_Thrift_Service_LBN_Thrift_GetModule_args();
  args.id = id;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

LBN_Thrift_ServiceClient.prototype.recv_LBN_Thrift_GetModule = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new LBN_Thrift_Service_LBN_Thrift_GetModule_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('LBN_Thrift_GetModule failed: unknown result');
};
LBN_Thrift_ServiceClient.prototype.LBN_Thrift_GetModuleControlMax = function(callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_LBN_Thrift_GetModuleControlMax();
};

LBN_Thrift_ServiceClient.prototype.send_LBN_Thrift_GetModuleControlMax = function() {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('LBN_Thrift_GetModuleControlMax', Thrift.MessageType.CALL, this.seqid);
  var args = new LBN_Thrift_Service_LBN_Thrift_GetModuleControlMax_args();
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

LBN_Thrift_ServiceClient.prototype.recv_LBN_Thrift_GetModuleControlMax = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new LBN_Thrift_Service_LBN_Thrift_GetModuleControlMax_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('LBN_Thrift_GetModuleControlMax failed: unknown result');
};
LBN_Thrift_ServiceClient.prototype.LBN_Thrift_SetModule = function(moduleId, control, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_LBN_Thrift_SetModule(moduleId, control);
};

LBN_Thrift_ServiceClient.prototype.send_LBN_Thrift_SetModule = function(moduleId, control) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('LBN_Thrift_SetModule', Thrift.MessageType.CALL, this.seqid);
  var args = new LBN_Thrift_Service_LBN_Thrift_SetModule_args();
  args.moduleId = moduleId;
  args.control = control;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

LBN_Thrift_ServiceClient.prototype.recv_LBN_Thrift_SetModule = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new LBN_Thrift_Service_LBN_Thrift_SetModule_result();
  result.read(input);
  input.readMessageEnd();

  callback(null)
};
LBN_Thrift_ServiceClient.prototype.LBN_Thrift_SetModules = function(moduleIdList, control, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_LBN_Thrift_SetModules(moduleIdList, control);
};

LBN_Thrift_ServiceClient.prototype.send_LBN_Thrift_SetModules = function(moduleIdList, control) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('LBN_Thrift_SetModules', Thrift.MessageType.CALL, this.seqid);
  var args = new LBN_Thrift_Service_LBN_Thrift_SetModules_args();
  args.moduleIdList = moduleIdList;
  args.control = control;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

LBN_Thrift_ServiceClient.prototype.recv_LBN_Thrift_SetModules = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new LBN_Thrift_Service_LBN_Thrift_SetModules_result();
  result.read(input);
  input.readMessageEnd();

  callback(null)
};
LBN_Thrift_ServiceClient.prototype.LBN_Thrift_SetModuleMessage = function(moduleId, message, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_LBN_Thrift_SetModuleMessage(moduleId, message);
};

LBN_Thrift_ServiceClient.prototype.send_LBN_Thrift_SetModuleMessage = function(moduleId, message) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('LBN_Thrift_SetModuleMessage', Thrift.MessageType.CALL, this.seqid);
  var args = new LBN_Thrift_Service_LBN_Thrift_SetModuleMessage_args();
  args.moduleId = moduleId;
  args.message = message;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

LBN_Thrift_ServiceClient.prototype.recv_LBN_Thrift_SetModuleMessage = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new LBN_Thrift_Service_LBN_Thrift_SetModuleMessage_result();
  result.read(input);
  input.readMessageEnd();

  callback(null)
};
LBN_Thrift_ServiceClient.prototype.LBN_Thrift_SetSwitch = function(switchId, modules, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_LBN_Thrift_SetSwitch(switchId, modules);
};

LBN_Thrift_ServiceClient.prototype.send_LBN_Thrift_SetSwitch = function(switchId, modules) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('LBN_Thrift_SetSwitch', Thrift.MessageType.CALL, this.seqid);
  var args = new LBN_Thrift_Service_LBN_Thrift_SetSwitch_args();
  args.switchId = switchId;
  args.modules = modules;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

LBN_Thrift_ServiceClient.prototype.recv_LBN_Thrift_SetSwitch = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new LBN_Thrift_Service_LBN_Thrift_SetSwitch_result();
  result.read(input);
  input.readMessageEnd();

  callback(null)
};
LBN_Thrift_ServiceClient.prototype.LBN_Thrift_GetSwitches = function(callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_LBN_Thrift_GetSwitches();
};

LBN_Thrift_ServiceClient.prototype.send_LBN_Thrift_GetSwitches = function() {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('LBN_Thrift_GetSwitches', Thrift.MessageType.CALL, this.seqid);
  var args = new LBN_Thrift_Service_LBN_Thrift_GetSwitches_args();
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

LBN_Thrift_ServiceClient.prototype.recv_LBN_Thrift_GetSwitches = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new LBN_Thrift_Service_LBN_Thrift_GetSwitches_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('LBN_Thrift_GetSwitches failed: unknown result');
};
LBN_Thrift_ServiceClient.prototype.LBN_Thrift_GetPowerMeter = function(callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_LBN_Thrift_GetPowerMeter();
};

LBN_Thrift_ServiceClient.prototype.send_LBN_Thrift_GetPowerMeter = function() {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('LBN_Thrift_GetPowerMeter', Thrift.MessageType.CALL, this.seqid);
  var args = new LBN_Thrift_Service_LBN_Thrift_GetPowerMeter_args();
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

LBN_Thrift_ServiceClient.prototype.recv_LBN_Thrift_GetPowerMeter = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new LBN_Thrift_Service_LBN_Thrift_GetPowerMeter_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('LBN_Thrift_GetPowerMeter failed: unknown result');
};
LBN_Thrift_ServiceClient.prototype.LBN_Thrift_GetPowerMeterOneDay = function(callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_LBN_Thrift_GetPowerMeterOneDay();
};

LBN_Thrift_ServiceClient.prototype.send_LBN_Thrift_GetPowerMeterOneDay = function() {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('LBN_Thrift_GetPowerMeterOneDay', Thrift.MessageType.CALL, this.seqid);
  var args = new LBN_Thrift_Service_LBN_Thrift_GetPowerMeterOneDay_args();
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

LBN_Thrift_ServiceClient.prototype.recv_LBN_Thrift_GetPowerMeterOneDay = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new LBN_Thrift_Service_LBN_Thrift_GetPowerMeterOneDay_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('LBN_Thrift_GetPowerMeterOneDay failed: unknown result');
};
LBN_Thrift_ServiceClient.prototype.LBN_Thrift_GetDisasterInfo = function(callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_LBN_Thrift_GetDisasterInfo();
};

LBN_Thrift_ServiceClient.prototype.send_LBN_Thrift_GetDisasterInfo = function() {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('LBN_Thrift_GetDisasterInfo', Thrift.MessageType.CALL, this.seqid);
  var args = new LBN_Thrift_Service_LBN_Thrift_GetDisasterInfo_args();
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

LBN_Thrift_ServiceClient.prototype.recv_LBN_Thrift_GetDisasterInfo = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new LBN_Thrift_Service_LBN_Thrift_GetDisasterInfo_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('LBN_Thrift_GetDisasterInfo failed: unknown result');
};
LBN_Thrift_ServiceClient.prototype.LBN_Thrift_GetAdminPassword = function(callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_LBN_Thrift_GetAdminPassword();
};

LBN_Thrift_ServiceClient.prototype.send_LBN_Thrift_GetAdminPassword = function() {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('LBN_Thrift_GetAdminPassword', Thrift.MessageType.CALL, this.seqid);
  var args = new LBN_Thrift_Service_LBN_Thrift_GetAdminPassword_args();
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

LBN_Thrift_ServiceClient.prototype.recv_LBN_Thrift_GetAdminPassword = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new LBN_Thrift_Service_LBN_Thrift_GetAdminPassword_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('LBN_Thrift_GetAdminPassword failed: unknown result');
};
LBN_Thrift_ServiceClient.prototype.LBN_Thrift_SetActive = function(active, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_LBN_Thrift_SetActive(active);
};

LBN_Thrift_ServiceClient.prototype.send_LBN_Thrift_SetActive = function(active) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('LBN_Thrift_SetActive', Thrift.MessageType.CALL, this.seqid);
  var args = new LBN_Thrift_Service_LBN_Thrift_SetActive_args();
  args.active = active;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

LBN_Thrift_ServiceClient.prototype.recv_LBN_Thrift_SetActive = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new LBN_Thrift_Service_LBN_Thrift_SetActive_result();
  result.read(input);
  input.readMessageEnd();

  callback(null)
};
LBN_Thrift_ServiceClient.prototype.LBN_Thrift_GetActive = function(callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_LBN_Thrift_GetActive();
};

LBN_Thrift_ServiceClient.prototype.send_LBN_Thrift_GetActive = function() {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('LBN_Thrift_GetActive', Thrift.MessageType.CALL, this.seqid);
  var args = new LBN_Thrift_Service_LBN_Thrift_GetActive_args();
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

LBN_Thrift_ServiceClient.prototype.recv_LBN_Thrift_GetActive = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new LBN_Thrift_Service_LBN_Thrift_GetActive_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('LBN_Thrift_GetActive failed: unknown result');
};
LBN_Thrift_ServiceClient.prototype.LBN_Thrift_SetAuto = function(automatic, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_LBN_Thrift_SetAuto(automatic);
};

LBN_Thrift_ServiceClient.prototype.send_LBN_Thrift_SetAuto = function(automatic) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('LBN_Thrift_SetAuto', Thrift.MessageType.CALL, this.seqid);
  var args = new LBN_Thrift_Service_LBN_Thrift_SetAuto_args();
  args.automatic = automatic;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

LBN_Thrift_ServiceClient.prototype.recv_LBN_Thrift_SetAuto = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new LBN_Thrift_Service_LBN_Thrift_SetAuto_result();
  result.read(input);
  input.readMessageEnd();

  callback(null)
};
LBN_Thrift_ServiceClient.prototype.LBN_Thrift_GetAuto = function(callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_LBN_Thrift_GetAuto();
};

LBN_Thrift_ServiceClient.prototype.send_LBN_Thrift_GetAuto = function() {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('LBN_Thrift_GetAuto', Thrift.MessageType.CALL, this.seqid);
  var args = new LBN_Thrift_Service_LBN_Thrift_GetAuto_args();
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

LBN_Thrift_ServiceClient.prototype.recv_LBN_Thrift_GetAuto = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new LBN_Thrift_Service_LBN_Thrift_GetAuto_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('LBN_Thrift_GetAuto failed: unknown result');
};
LBN_Thrift_ServiceClient.prototype.LBN_Thrift_SetSimulate = function(simulate, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_LBN_Thrift_SetSimulate(simulate);
};

LBN_Thrift_ServiceClient.prototype.send_LBN_Thrift_SetSimulate = function(simulate) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('LBN_Thrift_SetSimulate', Thrift.MessageType.CALL, this.seqid);
  var args = new LBN_Thrift_Service_LBN_Thrift_SetSimulate_args();
  args.simulate = simulate;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

LBN_Thrift_ServiceClient.prototype.recv_LBN_Thrift_SetSimulate = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new LBN_Thrift_Service_LBN_Thrift_SetSimulate_result();
  result.read(input);
  input.readMessageEnd();

  callback(null)
};
LBN_Thrift_ServiceClient.prototype.LBN_Thrift_GetSceneList = function(callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_LBN_Thrift_GetSceneList();
};

LBN_Thrift_ServiceClient.prototype.send_LBN_Thrift_GetSceneList = function() {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('LBN_Thrift_GetSceneList', Thrift.MessageType.CALL, this.seqid);
  var args = new LBN_Thrift_Service_LBN_Thrift_GetSceneList_args();
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

LBN_Thrift_ServiceClient.prototype.recv_LBN_Thrift_GetSceneList = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new LBN_Thrift_Service_LBN_Thrift_GetSceneList_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('LBN_Thrift_GetSceneList failed: unknown result');
};
LBN_Thrift_ServiceClient.prototype.LBN_Thrift_AddScene = function(title, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_LBN_Thrift_AddScene(title);
};

LBN_Thrift_ServiceClient.prototype.send_LBN_Thrift_AddScene = function(title) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('LBN_Thrift_AddScene', Thrift.MessageType.CALL, this.seqid);
  var args = new LBN_Thrift_Service_LBN_Thrift_AddScene_args();
  args.title = title;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

LBN_Thrift_ServiceClient.prototype.recv_LBN_Thrift_AddScene = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new LBN_Thrift_Service_LBN_Thrift_AddScene_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('LBN_Thrift_AddScene failed: unknown result');
};
LBN_Thrift_ServiceClient.prototype.LBN_Thrift_ModifyScene = function(scene, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_LBN_Thrift_ModifyScene(scene);
};

LBN_Thrift_ServiceClient.prototype.send_LBN_Thrift_ModifyScene = function(scene) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('LBN_Thrift_ModifyScene', Thrift.MessageType.CALL, this.seqid);
  var args = new LBN_Thrift_Service_LBN_Thrift_ModifyScene_args();
  args.scene = scene;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

LBN_Thrift_ServiceClient.prototype.recv_LBN_Thrift_ModifyScene = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new LBN_Thrift_Service_LBN_Thrift_ModifyScene_result();
  result.read(input);
  input.readMessageEnd();

  callback(null)
};
LBN_Thrift_ServiceClient.prototype.LBN_Thrift_DeleteScene = function(sceneId, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_LBN_Thrift_DeleteScene(sceneId);
};

LBN_Thrift_ServiceClient.prototype.send_LBN_Thrift_DeleteScene = function(sceneId) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('LBN_Thrift_DeleteScene', Thrift.MessageType.CALL, this.seqid);
  var args = new LBN_Thrift_Service_LBN_Thrift_DeleteScene_args();
  args.sceneId = sceneId;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

LBN_Thrift_ServiceClient.prototype.recv_LBN_Thrift_DeleteScene = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new LBN_Thrift_Service_LBN_Thrift_DeleteScene_result();
  result.read(input);
  input.readMessageEnd();

  callback(null)
};
LBN_Thrift_ServiceClient.prototype.LBN_Thrift_PreviewScene = function(sceneId, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_LBN_Thrift_PreviewScene(sceneId);
};

LBN_Thrift_ServiceClient.prototype.send_LBN_Thrift_PreviewScene = function(sceneId) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('LBN_Thrift_PreviewScene', Thrift.MessageType.CALL, this.seqid);
  var args = new LBN_Thrift_Service_LBN_Thrift_PreviewScene_args();
  args.sceneId = sceneId;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

LBN_Thrift_ServiceClient.prototype.recv_LBN_Thrift_PreviewScene = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new LBN_Thrift_Service_LBN_Thrift_PreviewScene_result();
  result.read(input);
  input.readMessageEnd();

  callback(null)
};
LBN_Thrift_ServiceClient.prototype.LBN_Thrift_GetScheduleList = function(callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_LBN_Thrift_GetScheduleList();
};

LBN_Thrift_ServiceClient.prototype.send_LBN_Thrift_GetScheduleList = function() {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('LBN_Thrift_GetScheduleList', Thrift.MessageType.CALL, this.seqid);
  var args = new LBN_Thrift_Service_LBN_Thrift_GetScheduleList_args();
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

LBN_Thrift_ServiceClient.prototype.recv_LBN_Thrift_GetScheduleList = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new LBN_Thrift_Service_LBN_Thrift_GetScheduleList_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('LBN_Thrift_GetScheduleList failed: unknown result');
};
LBN_Thrift_ServiceClient.prototype.LBN_Thrift_AddSchedule = function(scene, time, repeatAll, repeatDays, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_LBN_Thrift_AddSchedule(scene, time, repeatAll, repeatDays);
};

LBN_Thrift_ServiceClient.prototype.send_LBN_Thrift_AddSchedule = function(scene, time, repeatAll, repeatDays) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('LBN_Thrift_AddSchedule', Thrift.MessageType.CALL, this.seqid);
  var args = new LBN_Thrift_Service_LBN_Thrift_AddSchedule_args();
  args.scene = scene;
  args.time = time;
  args.repeatAll = repeatAll;
  args.repeatDays = repeatDays;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

LBN_Thrift_ServiceClient.prototype.recv_LBN_Thrift_AddSchedule = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new LBN_Thrift_Service_LBN_Thrift_AddSchedule_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('LBN_Thrift_AddSchedule failed: unknown result');
};
LBN_Thrift_ServiceClient.prototype.LBN_Thrift_ModifySchedule = function(schedule, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_LBN_Thrift_ModifySchedule(schedule);
};

LBN_Thrift_ServiceClient.prototype.send_LBN_Thrift_ModifySchedule = function(schedule) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('LBN_Thrift_ModifySchedule', Thrift.MessageType.CALL, this.seqid);
  var args = new LBN_Thrift_Service_LBN_Thrift_ModifySchedule_args();
  args.schedule = schedule;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

LBN_Thrift_ServiceClient.prototype.recv_LBN_Thrift_ModifySchedule = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new LBN_Thrift_Service_LBN_Thrift_ModifySchedule_result();
  result.read(input);
  input.readMessageEnd();

  callback(null)
};
LBN_Thrift_ServiceClient.prototype.LBN_Thrift_DeleteSchedule = function(scheduleId, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_LBN_Thrift_DeleteSchedule(scheduleId);
};

LBN_Thrift_ServiceClient.prototype.send_LBN_Thrift_DeleteSchedule = function(scheduleId) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('LBN_Thrift_DeleteSchedule', Thrift.MessageType.CALL, this.seqid);
  var args = new LBN_Thrift_Service_LBN_Thrift_DeleteSchedule_args();
  args.scheduleId = scheduleId;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

LBN_Thrift_ServiceClient.prototype.recv_LBN_Thrift_DeleteSchedule = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new LBN_Thrift_Service_LBN_Thrift_DeleteSchedule_result();
  result.read(input);
  input.readMessageEnd();

  callback(null)
};
LBN_Thrift_ServiceClient.prototype.LBN_Thrift_GetContextRuleList = function(callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_LBN_Thrift_GetContextRuleList();
};

LBN_Thrift_ServiceClient.prototype.send_LBN_Thrift_GetContextRuleList = function() {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('LBN_Thrift_GetContextRuleList', Thrift.MessageType.CALL, this.seqid);
  var args = new LBN_Thrift_Service_LBN_Thrift_GetContextRuleList_args();
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

LBN_Thrift_ServiceClient.prototype.recv_LBN_Thrift_GetContextRuleList = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new LBN_Thrift_Service_LBN_Thrift_GetContextRuleList_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('LBN_Thrift_GetContextRuleList failed: unknown result');
};
LBN_Thrift_ServiceClient.prototype.LBN_Thrift_ModifyContextRule = function(rule, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_LBN_Thrift_ModifyContextRule(rule);
};

LBN_Thrift_ServiceClient.prototype.send_LBN_Thrift_ModifyContextRule = function(rule) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('LBN_Thrift_ModifyContextRule', Thrift.MessageType.CALL, this.seqid);
  var args = new LBN_Thrift_Service_LBN_Thrift_ModifyContextRule_args();
  args.rule = rule;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

LBN_Thrift_ServiceClient.prototype.recv_LBN_Thrift_ModifyContextRule = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new LBN_Thrift_Service_LBN_Thrift_ModifyContextRule_result();
  result.read(input);
  input.readMessageEnd();

  callback(null)
};
LBN_Thrift_ServiceClient.prototype.LBN_Thrift_SetEnableContextRule = function(contextId, enable, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_LBN_Thrift_SetEnableContextRule(contextId, enable);
};

LBN_Thrift_ServiceClient.prototype.send_LBN_Thrift_SetEnableContextRule = function(contextId, enable) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('LBN_Thrift_SetEnableContextRule', Thrift.MessageType.CALL, this.seqid);
  var args = new LBN_Thrift_Service_LBN_Thrift_SetEnableContextRule_args();
  args.contextId = contextId;
  args.enable = enable;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

LBN_Thrift_ServiceClient.prototype.recv_LBN_Thrift_SetEnableContextRule = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new LBN_Thrift_Service_LBN_Thrift_SetEnableContextRule_result();
  result.read(input);
  input.readMessageEnd();

  callback(null)
};
LBN_Thrift_ServiceClient.prototype.LBN_Thrift_Simulate = function(time, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_LBN_Thrift_Simulate(time);
};

LBN_Thrift_ServiceClient.prototype.send_LBN_Thrift_Simulate = function(time) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('LBN_Thrift_Simulate', Thrift.MessageType.CALL, this.seqid);
  var args = new LBN_Thrift_Service_LBN_Thrift_Simulate_args();
  args.time = time;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

LBN_Thrift_ServiceClient.prototype.recv_LBN_Thrift_Simulate = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new LBN_Thrift_Service_LBN_Thrift_Simulate_result();
  result.read(input);
  input.readMessageEnd();

  callback(null)
};
LBN_Thrift_ServiceClient.prototype.LBN_Thrift_GetSolarInfo = function(callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_LBN_Thrift_GetSolarInfo();
};

LBN_Thrift_ServiceClient.prototype.send_LBN_Thrift_GetSolarInfo = function() {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('LBN_Thrift_GetSolarInfo', Thrift.MessageType.CALL, this.seqid);
  var args = new LBN_Thrift_Service_LBN_Thrift_GetSolarInfo_args();
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

LBN_Thrift_ServiceClient.prototype.recv_LBN_Thrift_GetSolarInfo = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new LBN_Thrift_Service_LBN_Thrift_GetSolarInfo_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('LBN_Thrift_GetSolarInfo failed: unknown result');
};
LBN_Thrift_ServiceClient.prototype.LBN_Thrift_GetCharts = function(callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_LBN_Thrift_GetCharts();
};

LBN_Thrift_ServiceClient.prototype.send_LBN_Thrift_GetCharts = function() {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('LBN_Thrift_GetCharts', Thrift.MessageType.CALL, this.seqid);
  var args = new LBN_Thrift_Service_LBN_Thrift_GetCharts_args();
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

LBN_Thrift_ServiceClient.prototype.recv_LBN_Thrift_GetCharts = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new LBN_Thrift_Service_LBN_Thrift_GetCharts_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('LBN_Thrift_GetCharts failed: unknown result');
};
LBN_Thrift_ServiceClient.prototype.LBN_Thrift_GetParkingSensorList = function(callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_LBN_Thrift_GetParkingSensorList();
};

LBN_Thrift_ServiceClient.prototype.send_LBN_Thrift_GetParkingSensorList = function() {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('LBN_Thrift_GetParkingSensorList', Thrift.MessageType.CALL, this.seqid);
  var args = new LBN_Thrift_Service_LBN_Thrift_GetParkingSensorList_args();
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

LBN_Thrift_ServiceClient.prototype.recv_LBN_Thrift_GetParkingSensorList = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new LBN_Thrift_Service_LBN_Thrift_GetParkingSensorList_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('LBN_Thrift_GetParkingSensorList failed: unknown result');
};
LBN_Thrift_ServiceClient.prototype.LBN_Thrift_GetSchedulePresetList = function(callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_LBN_Thrift_GetSchedulePresetList();
};

LBN_Thrift_ServiceClient.prototype.send_LBN_Thrift_GetSchedulePresetList = function() {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('LBN_Thrift_GetSchedulePresetList', Thrift.MessageType.CALL, this.seqid);
  var args = new LBN_Thrift_Service_LBN_Thrift_GetSchedulePresetList_args();
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

LBN_Thrift_ServiceClient.prototype.recv_LBN_Thrift_GetSchedulePresetList = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new LBN_Thrift_Service_LBN_Thrift_GetSchedulePresetList_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('LBN_Thrift_GetSchedulePresetList failed: unknown result');
};
LBN_Thrift_ServiceClient.prototype.LBN_Thrift_SetSchedulePreset = function(presetId, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_LBN_Thrift_SetSchedulePreset(presetId);
};

LBN_Thrift_ServiceClient.prototype.send_LBN_Thrift_SetSchedulePreset = function(presetId) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('LBN_Thrift_SetSchedulePreset', Thrift.MessageType.CALL, this.seqid);
  var args = new LBN_Thrift_Service_LBN_Thrift_SetSchedulePreset_args();
  args.presetId = presetId;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

LBN_Thrift_ServiceClient.prototype.recv_LBN_Thrift_SetSchedulePreset = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new LBN_Thrift_Service_LBN_Thrift_SetSchedulePreset_result();
  result.read(input);
  input.readMessageEnd();

  callback(null)
};
LBN_Thrift_ServiceProcessor = exports.Processor = function(handler) {
  this._handler = handler
}
LBN_Thrift_ServiceProcessor.prototype.process = function(input, output) {
  var r = input.readMessageBegin();
  if (this['process_' + r.fname]) {
    return this['process_' + r.fname].call(this, r.rseqid, input, output);
  } else {
    input.skip(Thrift.Type.STRUCT);
    input.readMessageEnd();
    var x = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN_METHOD, 'Unknown function ' + r.fname);
    output.writeMessageBegin(r.fname, Thrift.MessageType.Exception, r.rseqid);
    x.write(output);
    output.writeMessageEnd();
    output.flush();
  }
}

LBN_Thrift_ServiceProcessor.prototype.process_LBN_Thrift_Service_Init = function(seqid, input, output) {
  var args = new LBN_Thrift_Service_LBN_Thrift_Service_Init_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.LBN_Thrift_Service_Init(function (err, result) {
    var result = new LBN_Thrift_Service_LBN_Thrift_Service_Init_result((err != null ? err : {success: result}));
    output.writeMessageBegin("LBN_Thrift_Service_Init", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

LBN_Thrift_ServiceProcessor.prototype.process_LBN_Thrift_GetAreaList = function(seqid, input, output) {
  var args = new LBN_Thrift_Service_LBN_Thrift_GetAreaList_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.LBN_Thrift_GetAreaList(function (err, result) {
    var result = new LBN_Thrift_Service_LBN_Thrift_GetAreaList_result((err != null ? err : {success: result}));
    output.writeMessageBegin("LBN_Thrift_GetAreaList", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

LBN_Thrift_ServiceProcessor.prototype.process_LBN_Thrift_GetModule = function(seqid, input, output) {
  var args = new LBN_Thrift_Service_LBN_Thrift_GetModule_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.LBN_Thrift_GetModule(args.id, function (err, result) {
    var result = new LBN_Thrift_Service_LBN_Thrift_GetModule_result((err != null ? err : {success: result}));
    output.writeMessageBegin("LBN_Thrift_GetModule", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

LBN_Thrift_ServiceProcessor.prototype.process_LBN_Thrift_GetModuleControlMax = function(seqid, input, output) {
  var args = new LBN_Thrift_Service_LBN_Thrift_GetModuleControlMax_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.LBN_Thrift_GetModuleControlMax(function (err, result) {
    var result = new LBN_Thrift_Service_LBN_Thrift_GetModuleControlMax_result((err != null ? err : {success: result}));
    output.writeMessageBegin("LBN_Thrift_GetModuleControlMax", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

LBN_Thrift_ServiceProcessor.prototype.process_LBN_Thrift_SetModule = function(seqid, input, output) {
  var args = new LBN_Thrift_Service_LBN_Thrift_SetModule_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.LBN_Thrift_SetModule(args.moduleId, args.control, function (err, result) {
    var result = new LBN_Thrift_Service_LBN_Thrift_SetModule_result((err != null ? err : {success: result}));
    output.writeMessageBegin("LBN_Thrift_SetModule", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

LBN_Thrift_ServiceProcessor.prototype.process_LBN_Thrift_SetModules = function(seqid, input, output) {
  var args = new LBN_Thrift_Service_LBN_Thrift_SetModules_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.LBN_Thrift_SetModules(args.moduleIdList, args.control, function (err, result) {
    var result = new LBN_Thrift_Service_LBN_Thrift_SetModules_result((err != null ? err : {success: result}));
    output.writeMessageBegin("LBN_Thrift_SetModules", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

LBN_Thrift_ServiceProcessor.prototype.process_LBN_Thrift_SetModuleMessage = function(seqid, input, output) {
  var args = new LBN_Thrift_Service_LBN_Thrift_SetModuleMessage_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.LBN_Thrift_SetModuleMessage(args.moduleId, args.message, function (err, result) {
    var result = new LBN_Thrift_Service_LBN_Thrift_SetModuleMessage_result((err != null ? err : {success: result}));
    output.writeMessageBegin("LBN_Thrift_SetModuleMessage", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

LBN_Thrift_ServiceProcessor.prototype.process_LBN_Thrift_SetSwitch = function(seqid, input, output) {
  var args = new LBN_Thrift_Service_LBN_Thrift_SetSwitch_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.LBN_Thrift_SetSwitch(args.switchId, args.modules, function (err, result) {
    var result = new LBN_Thrift_Service_LBN_Thrift_SetSwitch_result((err != null ? err : {success: result}));
    output.writeMessageBegin("LBN_Thrift_SetSwitch", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

LBN_Thrift_ServiceProcessor.prototype.process_LBN_Thrift_GetSwitches = function(seqid, input, output) {
  var args = new LBN_Thrift_Service_LBN_Thrift_GetSwitches_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.LBN_Thrift_GetSwitches(function (err, result) {
    var result = new LBN_Thrift_Service_LBN_Thrift_GetSwitches_result((err != null ? err : {success: result}));
    output.writeMessageBegin("LBN_Thrift_GetSwitches", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

LBN_Thrift_ServiceProcessor.prototype.process_LBN_Thrift_GetPowerMeter = function(seqid, input, output) {
  var args = new LBN_Thrift_Service_LBN_Thrift_GetPowerMeter_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.LBN_Thrift_GetPowerMeter(function (err, result) {
    var result = new LBN_Thrift_Service_LBN_Thrift_GetPowerMeter_result((err != null ? err : {success: result}));
    output.writeMessageBegin("LBN_Thrift_GetPowerMeter", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

LBN_Thrift_ServiceProcessor.prototype.process_LBN_Thrift_GetPowerMeterOneDay = function(seqid, input, output) {
  var args = new LBN_Thrift_Service_LBN_Thrift_GetPowerMeterOneDay_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.LBN_Thrift_GetPowerMeterOneDay(function (err, result) {
    var result = new LBN_Thrift_Service_LBN_Thrift_GetPowerMeterOneDay_result((err != null ? err : {success: result}));
    output.writeMessageBegin("LBN_Thrift_GetPowerMeterOneDay", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

LBN_Thrift_ServiceProcessor.prototype.process_LBN_Thrift_GetDisasterInfo = function(seqid, input, output) {
  var args = new LBN_Thrift_Service_LBN_Thrift_GetDisasterInfo_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.LBN_Thrift_GetDisasterInfo(function (err, result) {
    var result = new LBN_Thrift_Service_LBN_Thrift_GetDisasterInfo_result((err != null ? err : {success: result}));
    output.writeMessageBegin("LBN_Thrift_GetDisasterInfo", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

LBN_Thrift_ServiceProcessor.prototype.process_LBN_Thrift_GetAdminPassword = function(seqid, input, output) {
  var args = new LBN_Thrift_Service_LBN_Thrift_GetAdminPassword_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.LBN_Thrift_GetAdminPassword(function (err, result) {
    var result = new LBN_Thrift_Service_LBN_Thrift_GetAdminPassword_result((err != null ? err : {success: result}));
    output.writeMessageBegin("LBN_Thrift_GetAdminPassword", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

LBN_Thrift_ServiceProcessor.prototype.process_LBN_Thrift_SetActive = function(seqid, input, output) {
  var args = new LBN_Thrift_Service_LBN_Thrift_SetActive_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.LBN_Thrift_SetActive(args.active, function (err, result) {
    var result = new LBN_Thrift_Service_LBN_Thrift_SetActive_result((err != null ? err : {success: result}));
    output.writeMessageBegin("LBN_Thrift_SetActive", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

LBN_Thrift_ServiceProcessor.prototype.process_LBN_Thrift_GetActive = function(seqid, input, output) {
  var args = new LBN_Thrift_Service_LBN_Thrift_GetActive_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.LBN_Thrift_GetActive(function (err, result) {
    var result = new LBN_Thrift_Service_LBN_Thrift_GetActive_result((err != null ? err : {success: result}));
    output.writeMessageBegin("LBN_Thrift_GetActive", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

LBN_Thrift_ServiceProcessor.prototype.process_LBN_Thrift_SetAuto = function(seqid, input, output) {
  var args = new LBN_Thrift_Service_LBN_Thrift_SetAuto_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.LBN_Thrift_SetAuto(args.automatic, function (err, result) {
    var result = new LBN_Thrift_Service_LBN_Thrift_SetAuto_result((err != null ? err : {success: result}));
    output.writeMessageBegin("LBN_Thrift_SetAuto", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

LBN_Thrift_ServiceProcessor.prototype.process_LBN_Thrift_GetAuto = function(seqid, input, output) {
  var args = new LBN_Thrift_Service_LBN_Thrift_GetAuto_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.LBN_Thrift_GetAuto(function (err, result) {
    var result = new LBN_Thrift_Service_LBN_Thrift_GetAuto_result((err != null ? err : {success: result}));
    output.writeMessageBegin("LBN_Thrift_GetAuto", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

LBN_Thrift_ServiceProcessor.prototype.process_LBN_Thrift_SetSimulate = function(seqid, input, output) {
  var args = new LBN_Thrift_Service_LBN_Thrift_SetSimulate_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.LBN_Thrift_SetSimulate(args.simulate, function (err, result) {
    var result = new LBN_Thrift_Service_LBN_Thrift_SetSimulate_result((err != null ? err : {success: result}));
    output.writeMessageBegin("LBN_Thrift_SetSimulate", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

LBN_Thrift_ServiceProcessor.prototype.process_LBN_Thrift_GetSceneList = function(seqid, input, output) {
  var args = new LBN_Thrift_Service_LBN_Thrift_GetSceneList_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.LBN_Thrift_GetSceneList(function (err, result) {
    var result = new LBN_Thrift_Service_LBN_Thrift_GetSceneList_result((err != null ? err : {success: result}));
    output.writeMessageBegin("LBN_Thrift_GetSceneList", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

LBN_Thrift_ServiceProcessor.prototype.process_LBN_Thrift_AddScene = function(seqid, input, output) {
  var args = new LBN_Thrift_Service_LBN_Thrift_AddScene_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.LBN_Thrift_AddScene(args.title, function (err, result) {
    var result = new LBN_Thrift_Service_LBN_Thrift_AddScene_result((err != null ? err : {success: result}));
    output.writeMessageBegin("LBN_Thrift_AddScene", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

LBN_Thrift_ServiceProcessor.prototype.process_LBN_Thrift_ModifyScene = function(seqid, input, output) {
  var args = new LBN_Thrift_Service_LBN_Thrift_ModifyScene_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.LBN_Thrift_ModifyScene(args.scene, function (err, result) {
    var result = new LBN_Thrift_Service_LBN_Thrift_ModifyScene_result((err != null ? err : {success: result}));
    output.writeMessageBegin("LBN_Thrift_ModifyScene", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

LBN_Thrift_ServiceProcessor.prototype.process_LBN_Thrift_DeleteScene = function(seqid, input, output) {
  var args = new LBN_Thrift_Service_LBN_Thrift_DeleteScene_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.LBN_Thrift_DeleteScene(args.sceneId, function (err, result) {
    var result = new LBN_Thrift_Service_LBN_Thrift_DeleteScene_result((err != null ? err : {success: result}));
    output.writeMessageBegin("LBN_Thrift_DeleteScene", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

LBN_Thrift_ServiceProcessor.prototype.process_LBN_Thrift_PreviewScene = function(seqid, input, output) {
  var args = new LBN_Thrift_Service_LBN_Thrift_PreviewScene_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.LBN_Thrift_PreviewScene(args.sceneId, function (err, result) {
    var result = new LBN_Thrift_Service_LBN_Thrift_PreviewScene_result((err != null ? err : {success: result}));
    output.writeMessageBegin("LBN_Thrift_PreviewScene", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

LBN_Thrift_ServiceProcessor.prototype.process_LBN_Thrift_GetScheduleList = function(seqid, input, output) {
  var args = new LBN_Thrift_Service_LBN_Thrift_GetScheduleList_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.LBN_Thrift_GetScheduleList(function (err, result) {
    var result = new LBN_Thrift_Service_LBN_Thrift_GetScheduleList_result((err != null ? err : {success: result}));
    output.writeMessageBegin("LBN_Thrift_GetScheduleList", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

LBN_Thrift_ServiceProcessor.prototype.process_LBN_Thrift_AddSchedule = function(seqid, input, output) {
  var args = new LBN_Thrift_Service_LBN_Thrift_AddSchedule_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.LBN_Thrift_AddSchedule(args.scene, args.time, args.repeatAll, args.repeatDays, function (err, result) {
    var result = new LBN_Thrift_Service_LBN_Thrift_AddSchedule_result((err != null ? err : {success: result}));
    output.writeMessageBegin("LBN_Thrift_AddSchedule", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

LBN_Thrift_ServiceProcessor.prototype.process_LBN_Thrift_ModifySchedule = function(seqid, input, output) {
  var args = new LBN_Thrift_Service_LBN_Thrift_ModifySchedule_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.LBN_Thrift_ModifySchedule(args.schedule, function (err, result) {
    var result = new LBN_Thrift_Service_LBN_Thrift_ModifySchedule_result((err != null ? err : {success: result}));
    output.writeMessageBegin("LBN_Thrift_ModifySchedule", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

LBN_Thrift_ServiceProcessor.prototype.process_LBN_Thrift_DeleteSchedule = function(seqid, input, output) {
  var args = new LBN_Thrift_Service_LBN_Thrift_DeleteSchedule_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.LBN_Thrift_DeleteSchedule(args.scheduleId, function (err, result) {
    var result = new LBN_Thrift_Service_LBN_Thrift_DeleteSchedule_result((err != null ? err : {success: result}));
    output.writeMessageBegin("LBN_Thrift_DeleteSchedule", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

LBN_Thrift_ServiceProcessor.prototype.process_LBN_Thrift_GetContextRuleList = function(seqid, input, output) {
  var args = new LBN_Thrift_Service_LBN_Thrift_GetContextRuleList_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.LBN_Thrift_GetContextRuleList(function (err, result) {
    var result = new LBN_Thrift_Service_LBN_Thrift_GetContextRuleList_result((err != null ? err : {success: result}));
    output.writeMessageBegin("LBN_Thrift_GetContextRuleList", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

LBN_Thrift_ServiceProcessor.prototype.process_LBN_Thrift_ModifyContextRule = function(seqid, input, output) {
  var args = new LBN_Thrift_Service_LBN_Thrift_ModifyContextRule_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.LBN_Thrift_ModifyContextRule(args.rule, function (err, result) {
    var result = new LBN_Thrift_Service_LBN_Thrift_ModifyContextRule_result((err != null ? err : {success: result}));
    output.writeMessageBegin("LBN_Thrift_ModifyContextRule", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

LBN_Thrift_ServiceProcessor.prototype.process_LBN_Thrift_SetEnableContextRule = function(seqid, input, output) {
  var args = new LBN_Thrift_Service_LBN_Thrift_SetEnableContextRule_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.LBN_Thrift_SetEnableContextRule(args.contextId, args.enable, function (err, result) {
    var result = new LBN_Thrift_Service_LBN_Thrift_SetEnableContextRule_result((err != null ? err : {success: result}));
    output.writeMessageBegin("LBN_Thrift_SetEnableContextRule", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

LBN_Thrift_ServiceProcessor.prototype.process_LBN_Thrift_Simulate = function(seqid, input, output) {
  var args = new LBN_Thrift_Service_LBN_Thrift_Simulate_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.LBN_Thrift_Simulate(args.time, function (err, result) {
    var result = new LBN_Thrift_Service_LBN_Thrift_Simulate_result((err != null ? err : {success: result}));
    output.writeMessageBegin("LBN_Thrift_Simulate", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

LBN_Thrift_ServiceProcessor.prototype.process_LBN_Thrift_GetSolarInfo = function(seqid, input, output) {
  var args = new LBN_Thrift_Service_LBN_Thrift_GetSolarInfo_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.LBN_Thrift_GetSolarInfo(function (err, result) {
    var result = new LBN_Thrift_Service_LBN_Thrift_GetSolarInfo_result((err != null ? err : {success: result}));
    output.writeMessageBegin("LBN_Thrift_GetSolarInfo", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

LBN_Thrift_ServiceProcessor.prototype.process_LBN_Thrift_GetCharts = function(seqid, input, output) {
  var args = new LBN_Thrift_Service_LBN_Thrift_GetCharts_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.LBN_Thrift_GetCharts(function (err, result) {
    var result = new LBN_Thrift_Service_LBN_Thrift_GetCharts_result((err != null ? err : {success: result}));
    output.writeMessageBegin("LBN_Thrift_GetCharts", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

LBN_Thrift_ServiceProcessor.prototype.process_LBN_Thrift_GetParkingSensorList = function(seqid, input, output) {
  var args = new LBN_Thrift_Service_LBN_Thrift_GetParkingSensorList_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.LBN_Thrift_GetParkingSensorList(function (err, result) {
    var result = new LBN_Thrift_Service_LBN_Thrift_GetParkingSensorList_result((err != null ? err : {success: result}));
    output.writeMessageBegin("LBN_Thrift_GetParkingSensorList", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

LBN_Thrift_ServiceProcessor.prototype.process_LBN_Thrift_GetSchedulePresetList = function(seqid, input, output) {
  var args = new LBN_Thrift_Service_LBN_Thrift_GetSchedulePresetList_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.LBN_Thrift_GetSchedulePresetList(function (err, result) {
    var result = new LBN_Thrift_Service_LBN_Thrift_GetSchedulePresetList_result((err != null ? err : {success: result}));
    output.writeMessageBegin("LBN_Thrift_GetSchedulePresetList", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

LBN_Thrift_ServiceProcessor.prototype.process_LBN_Thrift_SetSchedulePreset = function(seqid, input, output) {
  var args = new LBN_Thrift_Service_LBN_Thrift_SetSchedulePreset_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.LBN_Thrift_SetSchedulePreset(args.presetId, function (err, result) {
    var result = new LBN_Thrift_Service_LBN_Thrift_SetSchedulePreset_result((err != null ? err : {success: result}));
    output.writeMessageBegin("LBN_Thrift_SetSchedulePreset", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

